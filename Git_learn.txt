This is my first time to learn git.
git init
git add <file>
git commit -m <message>
git status  //查看是否有改变
git diff <file>     //查看改变了什么
git add <file>
git status
git commit -m <message>
git status
git log //查看更新历史
cat <file>  //查看file内容

//测试
git reset --hard HEAD^  //退回上一版本
git reset --hard <version> //返回指定版本
git reflog  //记录每次命令

//基础知识
//此电脑的工作区为Git-learn,工作区中隐藏文件.git为Git的版本库
//版本库中有一个暂存区stage和一个分支master,一个指针HEAD指向master
//git add 把文件添加到暂存区stage，git commit 将其添加到分支
git checkout --<file>   //丢弃最近一次工作区修改
git reset HEAD <file>   //丢弃最近一次暂存区修改

//删除文件
rm <file>
git rm <file>

//ssh加密连接
ssh-keygen -t rsa -C "youremail@example.com"
//.ssh目录找到id_rsa.pub复制进Account settings-SSH Keys
//两台电脑只要把ssh key放入github上就能同时提交了

git remote add origin <url> //与远程库关联
git push -u origin master
git push origin master //进入远程库
git clone <url> //本地从远程库克隆一份

//多人协作
git checkout -b <branch>
git branch  //查看已有分支
git add <file>
git commit -m <message>
git checkout master
git merge <branch>  //  合并分支
git branch -d <branch>  //删除分支
//git无法自动合并分支时，要首先解决冲突，手动编辑为我们希望的内容，再提交
git log --graph //查看分支合并图
git merge --no--ff -m "merge with no-ff" <branch>   //保留分支信息
git stash   //存储工作现场
git stash pop   //恢复并删除stash内容，返回工作现场
git stash list  //  查看stash内容
git push origin <branch>    //向远程库推送其他分支，推送失败采用git pull远程抓取分支
git remote -v   //查看远程库信息
git checkout --b branch-name origin/branch name //从本地创建与远程对应的分支
git branch --set-upstream branch-name origin/branch name    //建立本地分支与远程分支的关联
git rebase  //把本地未push的分叉体加历史整理成直线

git tag <tagname>   //新建标签
git tag -a <tagname> -m "meassage"  //指定标签信息
git tag //查看所有标签
git tag -d <tagname>    //删除指定标签
git push origin <tagname>   //指定标签推送到远程
git push origin --tags  //所有标签推送到远程
//删除远程标签：本地删除 git tag -d <tagname>;远程删除 git push origin :refs/tags/<tagname>
